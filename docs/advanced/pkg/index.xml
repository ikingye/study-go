<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2.3 常用库 on Go 学习笔记</title>
    <link>https://kingye.me/study-go/docs/advanced/pkg/</link>
    <description>Recent content in 2.3 常用库 on Go 学习笔记</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://kingye.me/study-go/docs/advanced/pkg/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cobra</title>
      <link>https://kingye.me/study-go/docs/advanced/pkg/cobra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/study-go/docs/advanced/pkg/cobra/</guid>
      <description>cobra # spf13/cobra A Commander for modern Go CLI interactions
quick start # typically a Cobra-based application will follow the following organizational structure:
▾ appName/ ▾ cmd/ add.go your.go commands.go here.go main.go In a Cobra app, typically the main.go file is very bare. It serves one purpose: initializing Cobra.
package main import ( &amp;#34;{pathToYourApp}/cmd&amp;#34; ) func main() { cmd.Execute() } Ideally you place this in app/cmd/root.go:
var rootCmd = &amp;amp;cobra.</description>
    </item>
    
    <item>
      <title>klog</title>
      <link>https://kingye.me/study-go/docs/advanced/pkg/klog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/study-go/docs/advanced/pkg/klog/</guid>
      <description>klog # V() 级别 # 级别 含义 v=0 Generally useful for this to always be visible to a cluster operator. v=1 A reasonable default log level if you don&amp;rsquo;t want verbosity. v=2 Useful steady state information about the service and important log messages that may correlate to significant changes in the system. This is the recommended default log level for most systems. v=3 Extended information about changes. v=4 Debug level verbosity.</description>
    </item>
    
  </channel>
</rss>
