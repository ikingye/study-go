<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1.4 其他 on Go 学习笔记</title>
    <link>https://kingye.me/study-go/docs/basic/others/</link>
    <description>Recent content in 1.4 其他 on Go 学习笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://kingye.me/study-go/docs/basic/others/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go 快速上手</title>
      <link>https://kingye.me/study-go/docs/basic/others/quick/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-go/docs/basic/others/quick/</guid>
      <description>&lt;h1 id=&#34;go-快速上手&#34;&gt;&#xA;  Go 快速上手&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-%e5%bf%ab%e9%80%9f%e4%b8%8a%e6%89%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;go-环境&#34;&gt;&#xA;  Go 环境&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-%e7%8e%af%e5%a2%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;goroot&#34;&gt;&#xA;  GOROOT&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goroot&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;GOROOT&lt;/code&gt;: 指定安装 GO 的根目录&lt;/p&gt;&#xA;&lt;p&gt;Go 1.0 之后，&lt;code&gt;go tool&lt;/code&gt; 利用 &lt;code&gt;GOROOT&lt;/code&gt; 查找&#xA;Go 编译器（保存在 &lt;code&gt;$GOROOT/pkg/tool/$GOOS_$GOARCH&lt;/code&gt;）&#xA;和标准库（在 &lt;code&gt;$GOROOT/pkg/$GOOS_$GOARCH&lt;/code&gt;）&lt;/p&gt;&#xA;&lt;p&gt;可以将 &lt;code&gt;GOROOT&lt;/code&gt; 理解为 Java 的 &lt;code&gt;JAVA_HOME&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;我们不应该设置 GOROOT，是因为 Go 工具链已经内置了正确的值。&#xA;除非：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果你是 Linux、FreeBSD 或者 OS X 用户，下载了 zip 和 tarball 的二进制包安装环境。这些二进制的默认环境位于 /usr/local/go，建议你将 Go 安装到这个位置。如果选择不这么做，就必须设置到你指定的目录下。&lt;/li&gt;&#xA;&lt;li&gt;如果你是 Windows 用户，使用 zip 二进制包安装，默认的 GOROOT 在 C:\Go 目录下。如果你将 Go 安装在其他位置，请设置 GOROOT 到指定的目录。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;gopath&#34;&gt;&#xA;  GOPATH&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#gopath&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;GOPATH&lt;/code&gt;: go 包的位置&lt;/p&gt;</description>
    </item>
    <item>
      <title>优劣</title>
      <link>https://kingye.me/study-go/docs/basic/others/pros-and-cons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-go/docs/basic/others/pros-and-cons/</guid>
      <description>&lt;h1 id=&#34;go-语言优劣&#34;&gt;&#xA;  Go 语言优劣&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-%e8%af%ad%e8%a8%80%e4%bc%98%e5%8a%a3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;go-的优点&#34;&gt;&#xA;  Go 的优点&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-%e7%9a%84%e4%bc%98%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;部署简单&#34;&gt;&#xA;  部署简单&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%83%a8%e7%bd%b2%e7%ae%80%e5%8d%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;直接编译成机器码&lt;/li&gt;&#xA;&lt;li&gt;不依赖其他库&lt;/li&gt;&#xA;&lt;li&gt;直接运行即可部署&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;静态类型语言&#34;&gt;&#xA;  静态类型语言&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%99%e6%80%81%e7%b1%bb%e5%9e%8b%e8%af%ad%e8%a8%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;编译时可检测出隐藏的大多数问题&lt;/p&gt;&#xA;&lt;h3 id=&#34;语言层面实现并发goroutine&#34;&gt;&#xA;  语言层面实现并发（goroutine）&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%af%ad%e8%a8%80%e5%b1%82%e9%9d%a2%e5%ae%9e%e7%8e%b0%e5%b9%b6%e5%8f%91goroutine&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;强大的标准库&#34;&gt;&#xA;  强大的标准库&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bc%ba%e5%a4%a7%e7%9a%84%e6%a0%87%e5%87%86%e5%ba%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;runtime 系统调度机制&lt;/li&gt;&#xA;&lt;li&gt;高效的 GC（垃圾回收）&lt;/li&gt;&#xA;&lt;li&gt;丰富的标准库&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;简单易学&#34;&gt;&#xA;  简单易学&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ae%80%e5%8d%95%e6%98%93%e5%ad%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;25 个关键字&lt;/li&gt;&#xA;&lt;li&gt;内嵌 C 语法支持（CGO）&lt;/li&gt;&#xA;&lt;li&gt;面向对象&lt;/li&gt;&#xA;&lt;li&gt;跨平台&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;背靠大厂google&#34;&gt;&#xA;  背靠大厂（Google）&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%83%8c%e9%9d%a0%e5%a4%a7%e5%8e%82google&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;性能好&#34;&gt;&#xA;  性能好&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%80%a7%e8%83%bd%e5%a5%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200524204903.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;go-的缺点&#34;&gt;&#xA;  Go 的缺点&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-%e7%9a%84%e7%bc%ba%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;无泛化类型&#34;&gt;&#xA;  无泛化类型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%97%a0%e6%b3%9b%e5%8c%96%e7%b1%bb%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;传言 Go 2.0 会加上&lt;/p&gt;&#xA;&lt;h3 id=&#34;无-exception都用-error&#34;&gt;&#xA;  无 Exception，都用 Error&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%97%a0-exception%e9%83%bd%e7%94%a8-error&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;有争议&lt;/p&gt;&#xA;&lt;h3 id=&#34;包管理大部分在-github&#34;&gt;&#xA;  包管理大部分在 Github&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8c%85%e7%ae%a1%e7%90%86%e5%a4%a7%e9%83%a8%e5%88%86%e5%9c%a8-github&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;参考：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/379439622/answer/1111390872&#34;&gt;2020 年以后是 Go 的天下吗？&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Go build</title>
      <link>https://kingye.me/study-go/docs/basic/others/gobuild/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-go/docs/basic/others/gobuild/</guid>
      <description>&lt;h1 id=&#34;go-build&#34;&gt;&#xA;  Go build&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-build&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-tag&#34;&gt;&#xA;  &lt;code&gt;-tag&lt;/code&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-tag&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;// +build dev&lt;/code&gt; 前后须有一个空行隔开&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;release_config.go&lt;/code&gt; 文件&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;go build -tags dev -o dev_version&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// +build dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;version&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DEV&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;dev_config.go&lt;/code&gt; 文件&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;go build -tags dev -o dev_version&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// +build release&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;version&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RELEASE&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;go-热编译工具&#34;&gt;&#xA;  Go 热编译工具&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-%e7%83%ad%e7%bc%96%e8%af%91%e5%b7%a5%e5%85%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;caixwgobuildhttpsgithubcomcaixwgobuild-github-starshttpsimgshieldsiogithubstarscaixwgobuildsvg&#34;&gt;&#xA;  &lt;a href=&#34;https://github.com/caixw/gobuild&#34;&gt;caixw/gobuild&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/caixw/gobuild.svg&#34; alt=&#34;Github stars&#34; /&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#caixwgobuildhttpsgithubcomcaixwgobuild-github-starshttpsimgshieldsiogithubstarscaixwgobuildsvg&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;gobuild 是一个简单的 Go 代码热编译工具。 会实时监控指定目录下的文件变化 (重命名，删除，创建，添加)，并编译和运行程序。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gobuild &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;dependents&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -h    显示当前帮助信息；&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -v    显示 gobuild 和 Go 程序的版本信息；&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -r    是否搜索子目录，默认为 true；&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -i    是否显示被标记为 IGNORE 的日志内容，默认为 false，即不显示；&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -o    执行编译后的可执行文件名；&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -x    传递给编译程序的参数；&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -ext  需要监视的扩展名，默认值为&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;go&amp;#34;&lt;/span&gt;，区分大小写，会去掉每个扩展名的首尾空格。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       若需要监视所有类型文件，请使用 *，传递空值代表不监视任何文件；&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -main 指定需要编译的文件，默认为&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dependents:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 指定其它依赖的目录，只能出现在命令的尾部。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;penggygobuildhttpsgithubcompenggygobuild-github-starshttpsimgshieldsiogithubstarspenggygobuildsvg&#34;&gt;&#xA;  &lt;a href=&#34;https://github.com/penggy/gobuild&#34;&gt;penggy/gobuild&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/penggy/gobuild.svg&#34; alt=&#34;Github stars&#34; /&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#penggygobuildhttpsgithubcompenggygobuild-github-starshttpsimgshieldsiogithubstarspenggygobuildsvg&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;EasyDarwin 依赖&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go Modules</title>
      <link>https://kingye.me/study-go/docs/basic/others/gomod/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-go/docs/basic/others/gomod/</guid>
      <description>&lt;h1 id=&#34;go-moduleshttpsgolangorgrefmod&#34;&gt;&#xA;  &lt;a href=&#34;https://golang.org/ref/mod&#34;&gt;Go Modules&lt;/a&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-moduleshttpsgolangorgrefmod&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.golang.org/using-go-modules&#34;&gt;Using Go Modules&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;import&#34;&gt;&#xA;  import&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#import&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;目录&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 调用是使用 go 文件里的 package xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;xxx&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Function&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;klog-import&#34;&gt;&#xA;  klog import&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#klog-import&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;klog 库 &lt;code&gt;https://github.com/kubernetes/klog&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;它的 &lt;code&gt;go.mod&lt;/code&gt; 第一行是 &lt;code&gt;module k8s.io/klog/v2&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;根目录有个文件 &lt;code&gt;klog.go&lt;/code&gt;，第一行 &lt;code&gt;package klog&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;所以我们在使用 klog 库时，&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;import k8s.io/klog/v2&lt;/code&gt; 就是 import 了这个库的根目录，根目录的 &lt;code&gt;*.go&lt;/code&gt; 文件，&lt;code&gt;package&lt;/code&gt; 都是 &lt;code&gt;klog&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;所以我们使用的时候，直接 &lt;code&gt;klog.Info()&lt;/code&gt; 就行。&lt;/p&gt;&#xA;&lt;p&gt;klog 库自身升级，只需要在它的 &lt;code&gt;go.mod&lt;/code&gt; 里第一行改成 &lt;code&gt;module k8s.io/klog/v3&lt;/code&gt; 就行。&lt;/p&gt;&#xA;&lt;p&gt;而我们使用新版本，也只需要改成 &lt;code&gt;import k8s.io/klog/v3&lt;/code&gt;，里面 &lt;code&gt;klog.Info()&lt;/code&gt; 都不用改（如果接口兼容的话）。&lt;/p&gt;&#xA;&lt;p&gt;参考：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/43579838/relationship-between-a-package-statement-and-the-directory-of-a-go-file&#34;&gt;Relationship between a package statement and the directory of a .go file&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>gopls</title>
      <link>https://kingye.me/study-go/docs/basic/others/gopls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-go/docs/basic/others/gopls/</guid>
      <description>&lt;h1 id=&#34;goplshttpsgithubcomgolangtoolsblobmastergoplsreadmemd&#34;&gt;&#xA;  &lt;a href=&#34;https://github.com/golang/tools/blob/master/gopls/README.md&#34;&gt;gopls&lt;/a&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goplshttpsgithubcomgolangtoolsblobmastergoplsreadmemd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;gopls (pronounced: &amp;ldquo;go please&amp;rdquo;) is the official &lt;a href=&#34;https://langserver.org/&#34;&gt;language server&lt;/a&gt; for the Go language.&lt;/p&gt;&#xA;&lt;p&gt;Go 扩展默认是使用大量的 Go 工具来提供各种功能的，&#xA;每个工具提供某个方面的能力，比如代码提示是依靠 gocode 的.&lt;/p&gt;&#xA;&lt;p&gt;不过微软在开发 VS Code 过程中，定义一种协议，语言服务器协议，&#xA;Language Server Protocol.&lt;/p&gt;&#xA;&lt;p&gt;这可是个好东西，如果你需要开发编辑器或 IDE,&#xA;就不需要再为每种语言实现诸如自动完成，代码提示等功能了，&#xA;直接利用 语言服务器协议 就行了.&lt;/p&gt;&#xA;&lt;p&gt;gopls 就是官方的语言服务器，当前处于 alpha 状态.&lt;/p&gt;</description>
    </item>
    <item>
      <title>包管理</title>
      <link>https://kingye.me/study-go/docs/basic/others/pm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-go/docs/basic/others/pm/</guid>
      <description>&lt;h1 id=&#34;包管理&#34;&gt;&#xA;  包管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8c%85%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;go-包管理概述&#34;&gt;&#xA;  Go 包管理概述&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-%e5%8c%85%e7%ae%a1%e7%90%86%e6%a6%82%e8%bf%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;go-14-及之前&#34;&gt;&#xA;  Go 1.4 及之前&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-14-%e5%8f%8a%e4%b9%8b%e5%89%8d&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;必须设置 &lt;code&gt;GOPATH&lt;/code&gt; 环境变量，且源代码必须存放在 &lt;code&gt;GOPATH&lt;/code&gt; 下&lt;/li&gt;&#xA;&lt;li&gt;拉取外部依赖包时，总是拉取最新的版本，无法指定需要的版本&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;设置 &lt;code&gt;GOPATH&lt;/code&gt; 环境变量有两个原因：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;它规定了 &lt;code&gt;go get&lt;/code&gt; 命令下载的依赖包的存储位置（&lt;code&gt;$GOPATH/src&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;li&gt;通过设置 &lt;code&gt;GOPATH&lt;/code&gt;，可以方便 Golang 计算出 import 的路径&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;go-15-至-go-110&#34;&gt;&#xA;  Go 1.5 至 Go 1.10&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-15-%e8%87%b3-go-110&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;每个项目的根目录下可以有一个 vendor 目录，里面存放了该项目的依赖的包&lt;/p&gt;&#xA;&lt;h3 id=&#34;go-111-至-go-112&#34;&gt;&#xA;  Go 1.11 至 Go 1.12&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-111-%e8%87%b3-go-112&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;默认使用的还是 GOPATH 的管理方式&lt;/li&gt;&#xA;&lt;li&gt;运行 &lt;code&gt;export GO111MODULE=on&lt;/code&gt;，使用 &lt;code&gt;Go Modules&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;GO111MODULE&lt;/code&gt; 为 &lt;code&gt;off&lt;/code&gt; 时：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;优先使用 &lt;code&gt;vendor&lt;/code&gt; 目录下面的包，&lt;/li&gt;&#xA;&lt;li&gt;如果 &lt;code&gt;vendor&lt;/code&gt; 下面没有搜索到，再搜索 &lt;code&gt;$GOPATH/src&lt;/code&gt; 下面的包，&lt;/li&gt;&#xA;&lt;li&gt;如果 &lt;code&gt;$GOPATH&lt;/code&gt; 下面没有搜索到，那么搜索 &lt;code&gt;$GOROOT/src&lt;/code&gt; 下面的包&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;go-113-及之后&#34;&gt;&#xA;  Go 1.13 及之后&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-113-%e5%8f%8a%e4%b9%8b%e5%90%8e&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Golang 的包管理默认使用 &lt;code&gt;Go Modules&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>编译</title>
      <link>https://kingye.me/study-go/docs/basic/others/compile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-go/docs/basic/others/compile/</guid>
      <description>&lt;h1 id=&#34;编译&#34;&gt;&#xA;  编译&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bc%96%e8%af%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;makefile&#34;&gt;&#xA;  Makefile&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#makefile&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;go-makefile-样例&#34;&gt;&#xA;  Go Makefile 样例&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-makefile-%e6%a0%b7%e4%be%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.env&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROJECTNAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;shell basename &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PWD&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Go related variables.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;GOBASE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;shell pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GOPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBASE&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/vendor:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBASE&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GOBIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBASE&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;/bin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GOFILES&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;wildcard *.go&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Redirect error output to a file, so we can show it in development mode.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;STDERR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/tmp/.&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PROJECTNAME&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;-stderr.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# PID file will keep the process id of the server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;PID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/tmp/.&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PROJECTNAME&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;.pid&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Make is verbose in Linux. Make it silent.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MAKEFLAGS &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; --silent&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## install: Install missing dependencies. Runs `go get` internally. e.g; make install get=github.com/foo/bar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; go-get&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## start: Start in development mode. Auto-starts when code changes.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;trap &amp;#39;make stop&amp;#39; EXIT; &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;MAKE&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; compile start-server watch run=&amp;#39;make compile start-server&amp;#39;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## stop: Stop development mode.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;stop&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; stop-server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;start-server&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; stop-server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  &amp;gt;  &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PROJECTNAME&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; is available at &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ADDR&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@-&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBIN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;/&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PROJECTNAME&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &amp;amp; echo $$! &amp;gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PID&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@cat &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PID&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/^/s/^/  \&amp;gt;  PID: /&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;stop-server&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@-touch &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PID&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@-kill &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PID&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; 2&amp;gt; /dev/null &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; true&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@-rm &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PID&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## watch: Run given command when code changes. e.g; make watch run=&amp;#34;echo &amp;#39;hey&amp;#39;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;watch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@GOPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOPATH&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; GOBIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBIN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; yolo -i . -e vendor -e bin -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;run&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;restart-server&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; stop-server start-server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## compile: Compile the binary.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;compile&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@-touch &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;STDERR&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@-rm &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;STDERR&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@-&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;MAKE&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; -s go-compile 2&amp;gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;STDERR&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@cat &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;STDERR&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; | sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1s/.*/\nError:\n/&amp;#39;&lt;/span&gt;  | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/make\[.*/ /&amp;#39;&lt;/span&gt; | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/^/s/^/     /&amp;#34;&lt;/span&gt; 1&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## exec: Run given command, wrapped with custom GOPATH. e.g; make exec run=&amp;#34;go test ./...&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exec&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@GOPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOPATH&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; GOBIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBIN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;run&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## clean: Clean build files. Runs `go clean` internally.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;clean&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;MAKEFILE&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; go-clean&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;go-compile&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; go-clean go-get go-build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;go-build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  &amp;gt;  Building binary...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@GOPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOPATH&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; GOBIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBIN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; go build -o &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBIN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;/&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PROJECTNAME&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOFILES&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;go-generate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  &amp;gt;  Generating dependency files...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@GOPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOPATH&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; GOBIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBIN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; go generate &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;generate&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;go-get&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  &amp;gt;  Checking if there is any missing dependencies...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@GOPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOPATH&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; GOBIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBIN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; go get &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;get&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;go-install&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@GOPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOPATH&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; GOBIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBIN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; go install &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOFILES&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;go-clean&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  &amp;gt;  Cleaning build cache&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@GOPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOPATH&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; GOBIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;GOBIN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; go clean&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.PHONY&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; help&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; help&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;help&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Makefile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; Choose a command run in &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;PROJECTNAME&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/^##//p&amp;#39;&lt;/span&gt; $&amp;lt; | column -t -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt; |  sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/^/ /&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考：&lt;/p&gt;</description>
    </item>
    <item>
      <title>历史</title>
      <link>https://kingye.me/study-go/docs/basic/others/history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-go/docs/basic/others/history/</guid>
      <description>&lt;h1 id=&#34;go-历史&#34;&gt;&#xA;  Go 历史&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-%e5%8e%86%e5%8f%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Go 插件系统</title>
      <link>https://kingye.me/study-go/docs/basic/others/plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-go/docs/basic/others/plugin/</guid>
      <description>&lt;h1 id=&#34;go-插件系统&#34;&gt;&#xA;  Go 插件系统&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-%e6%8f%92%e4%bb%b6%e7%b3%bb%e7%bb%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Go 1.8 版本开始提供了一个创建共享库的新工具，称为 &lt;code&gt;Plugins&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Go 插件是使用 &lt;code&gt;-buildmode=plugin&lt;/code&gt; 标记编译的一个包，用于生成一个共享对象（&lt;code&gt;.so&lt;/code&gt;）库文件。&#xA;Go 包中的导出的函数和变量被公开为 &lt;code&gt;ELF&lt;/code&gt; 符号，可以使用 plugin 包在运行时查找并绑定 &lt;code&gt;ELF&lt;/code&gt; 符号。&lt;/p&gt;&#xA;&lt;p&gt;Go 编译器能够使用 build flag &lt;code&gt;-buildmode=c-shared&lt;/code&gt; 创建 C 风格的动态共享库。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;编写-plugin&#34;&gt;&#xA;  编写 plugin&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bc%96%e5%86%99-plugin&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;包名称必须是 &lt;code&gt;main&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;没有 main 函数&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;必须有可以导出 (访问) 的变量或者方法&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;使用-plugin&#34;&gt;&#xA;  使用 plugin&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bd%bf%e7%94%a8-plugin&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;加载编译好的插件 &lt;code&gt;plugin.Open(&amp;quot;./plugin_doctor.so&amp;quot;)&lt;/code&gt; (&lt;code&gt;*.so&lt;/code&gt; 文件路径相对与可执行文件的路径，可以是绝对路径)&lt;/li&gt;&#xA;&lt;li&gt;寻找插件可到变量 &lt;code&gt;plug.Lookup(&amp;quot;Doctor&amp;quot;)&lt;/code&gt;,&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;TypeAssert: Symbol (interface {})&lt;/code&gt; 转换成 API 的接口类型&lt;/li&gt;&#xA;&lt;li&gt;执行 API interface 的方法&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;优点&#34;&gt;&#xA;  优点&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bc%98%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;缺陷&#34;&gt;&#xA;  缺陷&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bc%ba%e9%99%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;插件实现和主应用程序都必须使用完全相同的 Go 工具链版本构建。&#xA;由于插件提供的代码将与主代码在相同的进程空间中运行，因此编译的二进制文件应与主应用程序 100% 兼容。&lt;/p&gt;</description>
    </item>
    <item>
      <title>goroutine</title>
      <link>https://kingye.me/study-go/docs/basic/others/goroutine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-go/docs/basic/others/goroutine/</guid>
      <description>&lt;h1 id=&#34;goroutine&#34;&gt;&#xA;  goroutine&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goroutine&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;golang-并发模型&#34;&gt;&#xA;  golang 并发模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#golang-%e5%b9%b6%e5%8f%91%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;goroutine-记得-return-或者中断不然容易造成-goroutine-占用大量-cpu&#34;&gt;&#xA;  goroutine 记得 return 或者中断，不然容易造成 goroutine 占用大量 CPU&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goroutine-%e8%ae%b0%e5%be%97-return-%e6%88%96%e8%80%85%e4%b8%ad%e6%96%ad%e4%b8%8d%e7%84%b6%e5%ae%b9%e6%98%93%e9%80%a0%e6%88%90-goroutine-%e5%8d%a0%e7%94%a8%e5%a4%a7%e9%87%8f-cpu&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;goroutine-如何调度&#34;&gt;&#xA;  Goroutine 如何调度？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goroutine-%e5%a6%82%e4%bd%95%e8%b0%83%e5%ba%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;每个线程会都占用 &lt;code&gt;1MB&lt;/code&gt; 以上的内存空间，在对线程进行切换时不止会消耗较多的内存，恢复寄存器中的内容还需要向操作系统申请或者销毁对应的资源，&#xA;每一次线程上下文的切换都需要消耗约为 &lt;code&gt;1us&lt;/code&gt;，&#xA;但是 Go 调度器对 Goroutine 的上下文切换约为 &lt;code&gt;0.2us&lt;/code&gt;，减少了 80% 的额外开销。&lt;/p&gt;&#xA;&lt;p&gt;Go 语言的调度器通过&lt;strong&gt;使用与 CPU 数量相等的线程&lt;/strong&gt;减少线程频繁切换的内存开销，&#xA;同时在每一个线程上执行额外开销更低的 Goroutine 来降低操作系统和硬件的负载。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;一个 Goroutine 既要包含要执行的代码， 又要包含用于执行该代码的&lt;code&gt;栈&lt;/code&gt;和 &lt;code&gt;PC&lt;/code&gt;、&lt;code&gt;SP 指针&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;参考：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://draveness.me/golang/docs/part3-runtime/ch06-concurrency/golang-goroutine/&#34;&gt;Go 语言调度器与 Goroutine 实现原理&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://colobu.com/2017/05/04/go-scheduler/&#34;&gt;[译] Go 调度器: M, P 和 G&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tonybai.com/2017/06/23/an-intro-about-goroutine-scheduler/&#34;&gt;也谈 goroutine 调度器&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://ga0.github.io/golang/2015/09/20/golang-runtime-scheduler.html&#34;&gt;Golang 调度器源码分析&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>版本</title>
      <link>https://kingye.me/study-go/docs/basic/others/version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-go/docs/basic/others/version/</guid>
      <description>&lt;h1 id=&#34;go-版本&#34;&gt;&#xA;  Go 版本&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-%e7%89%88%e6%9c%ac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/golang/go&#34;&gt;golang/go&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/golang/go.svg&#34; alt=&#34;Github stars&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/forks/golang/go.svg&#34; alt=&#34;Github forks&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/golang/go.svg&#34; alt=&#34;Language&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/golang/go.svg?sort=semver&#34; alt=&#34;Last Tag&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/golang/go.svg&#34; alt=&#34;Last commit&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;版本历史httpsgolangorgdocdevelreleasehtml&#34;&gt;&#xA;  &lt;a href=&#34;https://golang.org/doc/devel/release.html&#34;&gt;版本历史&lt;/a&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%89%88%e6%9c%ac%e5%8e%86%e5%8f%b2httpsgolangorgdocdevelreleasehtml&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;120httpsgolangorgdocgo120&#34;&gt;&#xA;  &lt;a href=&#34;https://golang.org/doc/go1.20&#34;&gt;1.20&lt;/a&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#120httpsgolangorgdocgo120&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;119httpsgolangorgdocgo119-2022-08-02&#34;&gt;&#xA;  &lt;a href=&#34;https://golang.org/doc/go1.19&#34;&gt;1.19&lt;/a&gt; (2022-08-02)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#119httpsgolangorgdocgo119-2022-08-02&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;它的大部分变化是在工具链、运行时和库的实现方面。&lt;/p&gt;&#xA;&lt;h3 id=&#34;118httpsgolangorgdocgo118-2022-03-15&#34;&gt;&#xA;  &lt;a href=&#34;https://golang.org/doc/go1.18&#34;&gt;1.18&lt;/a&gt; (2022-03-15)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#118httpsgolangorgdocgo118-2022-03-15&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;范型&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;117httpsgolangorgdocgo117-2021-08-16&#34;&gt;&#xA;  &lt;a href=&#34;https://golang.org/doc/go1.17&#34;&gt;1.17&lt;/a&gt; (2021-08-16)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#117httpsgolangorgdocgo117-2021-08-16&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;支持从切片到数组指针的转换。&lt;/p&gt;&#xA;&lt;h3 id=&#34;116httpsgolangorgdocgo116-2021-02-16&#34;&gt;&#xA;  &lt;a href=&#34;https://golang.org/doc/go1.16&#34;&gt;1.16&lt;/a&gt; (2021-02-16)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#116httpsgolangorgdocgo116-2021-02-16&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;go build&lt;/code&gt; / &lt;code&gt;go run&lt;/code&gt;命令不再自动更新 go.mod 和 go.sum 了&#xA;&lt;ul&gt;&#xA;&lt;li&gt;需要使用 &lt;code&gt;go get&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;go mod tidy&lt;/code&gt; 依然执行对 go.mod 的清理&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;自动更新 go.mod&lt;/code&gt; &amp;ndash;&amp;gt; &lt;code&gt;-mod=readonly 选项避免自动更新 go.mod&lt;/code&gt; &amp;ndash;&amp;gt; &lt;code&gt;取消自动更新 go.mod&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;后续，Go 团队会让 go get 将专注于分析依赖，并获取 go 包/module，更新 go.mod/go.sum，而不再具有安装可执行 Go 程序的行为能力，&#xA;这样 go get 和 go install 就会各司其职，Gopher 们也不会再被两者的重叠行为所迷惑了。&#xA;现在如果不想 go get 编译安装，可使用 &lt;code&gt;go get -d&lt;/code&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
