<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>最佳实践 on Go 学习笔记</title>
    <link>https://ikingye.github.io/study-go/docs/basic/practice/</link>
    <description>Recent content in 最佳实践 on Go 学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://ikingye.github.io/study-go/docs/basic/practice/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>常用 package</title>
      <link>https://ikingye.github.io/study-go/docs/basic/practice/package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-go/docs/basic/practice/package/</guid>
      <description>Go 常用 package cmd spf13/cobra A Commander for modern Go CLI interactions
web gorilla/mux A powerful HTTP router and URL matcher for building Go web servers
githubnemo/CompileDaemon Watches your .go files in a directory and invokes go build if a file changed.
Usage:
./CompileDaemon -directory=yourproject/</description>
    </item>
    
    <item>
      <title>Go 命令</title>
      <link>https://ikingye.github.io/study-go/docs/basic/practice/command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-go/docs/basic/practice/command/</guid>
      <description>Go 命令 go get go get [-d] [-f] [-t] [-u] [-v] [-fix] [-insecure] [build flags] [packages] go get -d go get -d library 表示只下载，不安装
go get == go install go get -d == go list The -d flag instructs get to download the source code needed to build the named packages, including downloading necessary dependencies, but not to build and install them.
With no package arguments, &amp;lsquo;go get&amp;rsquo; applies to Go package in the current directory, if any.</description>
    </item>
    
    <item>
      <title>编译</title>
      <link>https://ikingye.github.io/study-go/docs/basic/practice/compile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-go/docs/basic/practice/compile/</guid>
      <description>编译 交叉编译 golang 交叉编译很简单的，只要设置几个环境变量就可以了
# mac上编译linux和windows二进制 CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build # linux上编译mac和windows二进制 CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build # windows上编译mac和linux二进制 SET CGO_ENABLED=0 SET GOOS=darwin SET GOARCH=amd64 go build main.go SET CGO_ENABLED=0 SET GOOS=linux SET GOARCH=amd64 go build main.go </description>
    </item>
    
  </channel>
</rss>